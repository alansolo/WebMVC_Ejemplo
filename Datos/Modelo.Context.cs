//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VESCEntities : DbContext
    {
        public VESCEntities()
            : base("name=VESCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatClub> CatClub { get; set; }
        public virtual DbSet<CategoriaClub> CategoriaClub { get; set; }
        public virtual DbSet<CatFormato> CatFormato { get; set; }
        public virtual DbSet<CatModalidadPago> CatModalidadPago { get; set; }
        public virtual DbSet<CatNivel> CatNivel { get; set; }
        public virtual DbSet<CatPlan> CatPlan { get; set; }
        public virtual DbSet<CatRol> CatRol { get; set; }
        public virtual DbSet<CatTipoPago> CatTipoPago { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<HistContable> HistContable { get; set; }
        public virtual DbSet<HistMovimientosSIAS> HistMovimientosSIAS { get; set; }
        public virtual DbSet<Login> Login { get; set; }
        public virtual DbSet<LoginEmpresa> LoginEmpresa { get; set; }
        public virtual DbSet<PlanEmpresa> PlanEmpresa { get; set; }
        public virtual DbSet<Precios> Precios { get; set; }
        public virtual DbSet<ProcesoMembresia> ProcesoMembresia { get; set; }
        public virtual DbSet<RazonSocial> RazonSocial { get; set; }
        public virtual DbSet<RolPantalla> RolPantalla { get; set; }
        public virtual DbSet<sesion> sesion { get; set; }
    
        public virtual ObjectResult<GetClub_Result> GetClub(Nullable<int> idClub, string club)
        {
            var idClubParameter = idClub.HasValue ?
                new ObjectParameter("idClub", idClub) :
                new ObjectParameter("idClub", typeof(int));
    
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClub_Result>("GetClub", idClubParameter, clubParameter);
        }
    
        public virtual ObjectResult<GetEmpresa_Result> GetEmpresa(Nullable<int> idEmpresa, string empresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresa_Result>("GetEmpresa", idEmpresaParameter, empresaParameter);
        }
    
        public virtual ObjectResult<GetFormato_Result> GetFormato(Nullable<int> idFormato, string formato)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("idFormato", idFormato) :
                new ObjectParameter("idFormato", typeof(int));
    
            var formatoParameter = formato != null ?
                new ObjectParameter("formato", formato) :
                new ObjectParameter("formato", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormato_Result>("GetFormato", idFormatoParameter, formatoParameter);
        }
    
        public virtual ObjectResult<GetLogin_Result> GetLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLogin_Result>("GetLogin");
        }
    
        public virtual ObjectResult<GetLoginEmpresa_Result> GetLoginEmpresa(Nullable<int> idLogin, Nullable<int> idEmpresa)
        {
            var idLoginParameter = idLogin.HasValue ?
                new ObjectParameter("idLogin", idLogin) :
                new ObjectParameter("idLogin", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoginEmpresa_Result>("GetLoginEmpresa", idLoginParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetModalidadPago_Result> GetModalidadPago(Nullable<int> idModaliadPago, string modalidadPago)
        {
            var idModaliadPagoParameter = idModaliadPago.HasValue ?
                new ObjectParameter("idModaliadPago", idModaliadPago) :
                new ObjectParameter("idModaliadPago", typeof(int));
    
            var modalidadPagoParameter = modalidadPago != null ?
                new ObjectParameter("modalidadPago", modalidadPago) :
                new ObjectParameter("modalidadPago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModalidadPago_Result>("GetModalidadPago", idModaliadPagoParameter, modalidadPagoParameter);
        }
    
        public virtual ObjectResult<GetNivel_Result> GetNivel(Nullable<int> idNivel, string nivel)
        {
            var idNivelParameter = idNivel.HasValue ?
                new ObjectParameter("idNivel", idNivel) :
                new ObjectParameter("idNivel", typeof(int));
    
            var nivelParameter = nivel != null ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNivel_Result>("GetNivel", idNivelParameter, nivelParameter);
        }
    
        public virtual ObjectResult<GetPlan_Result> GetPlan(Nullable<int> idPlan, string plan)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var planParameter = plan != null ?
                new ObjectParameter("plan", plan) :
                new ObjectParameter("plan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPlan_Result>("GetPlan", idPlanParameter, planParameter);
        }
    
        public virtual ObjectResult<GetRazonSocial_Result> GetRazonSocial(Nullable<int> idRazonSocial, string razonSocial)
        {
            var idRazonSocialParameter = idRazonSocial.HasValue ?
                new ObjectParameter("idRazonSocial", idRazonSocial) :
                new ObjectParameter("idRazonSocial", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("razonSocial", razonSocial) :
                new ObjectParameter("razonSocial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRazonSocial_Result>("GetRazonSocial", idRazonSocialParameter, razonSocialParameter);
        }
    
        public virtual int InsertClub(string club, string descripcion, string usuarioInsert)
        {
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertClub", clubParameter, descripcionParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertEmpresa(string empresa, string nombreContacto, string apellidoPContacto, string apellidoMContacto, string puestoContacto, string telefonoContacto, string telefono2Contacto, string correoContacto, Nullable<bool> estatus, Nullable<int> idLogin, string usuarioInsert)
        {
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var apellidoPContactoParameter = apellidoPContacto != null ?
                new ObjectParameter("apellidoPContacto", apellidoPContacto) :
                new ObjectParameter("apellidoPContacto", typeof(string));
    
            var apellidoMContactoParameter = apellidoMContacto != null ?
                new ObjectParameter("apellidoMContacto", apellidoMContacto) :
                new ObjectParameter("apellidoMContacto", typeof(string));
    
            var puestoContactoParameter = puestoContacto != null ?
                new ObjectParameter("puestoContacto", puestoContacto) :
                new ObjectParameter("puestoContacto", typeof(string));
    
            var telefonoContactoParameter = telefonoContacto != null ?
                new ObjectParameter("telefonoContacto", telefonoContacto) :
                new ObjectParameter("telefonoContacto", typeof(string));
    
            var telefono2ContactoParameter = telefono2Contacto != null ?
                new ObjectParameter("telefono2Contacto", telefono2Contacto) :
                new ObjectParameter("telefono2Contacto", typeof(string));
    
            var correoContactoParameter = correoContacto != null ?
                new ObjectParameter("correoContacto", correoContacto) :
                new ObjectParameter("correoContacto", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var idLoginParameter = idLogin.HasValue ?
                new ObjectParameter("idLogin", idLogin) :
                new ObjectParameter("idLogin", typeof(int));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmpresa", empresaParameter, nombreContactoParameter, apellidoPContactoParameter, apellidoMContactoParameter, puestoContactoParameter, telefonoContactoParameter, telefono2ContactoParameter, correoContactoParameter, estatusParameter, idLoginParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertFormato(string formato, string descripcion, Nullable<decimal> mensualidad, string usuarioInsert)
        {
            var formatoParameter = formato != null ?
                new ObjectParameter("formato", formato) :
                new ObjectParameter("formato", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var mensualidadParameter = mensualidad.HasValue ?
                new ObjectParameter("mensualidad", mensualidad) :
                new ObjectParameter("mensualidad", typeof(decimal));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertFormato", formatoParameter, descripcionParameter, mensualidadParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertLoginEmpresa(Nullable<int> idEmpresa, Nullable<int> idLogin, Nullable<bool> estatus, string usuarioInsert)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var idLoginParameter = idLogin.HasValue ?
                new ObjectParameter("idLogin", idLogin) :
                new ObjectParameter("idLogin", typeof(int));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLoginEmpresa", idEmpresaParameter, idLoginParameter, estatusParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertModalidadPago(string modalidadPago, string descripcion, string usuarioInsert)
        {
            var modalidadPagoParameter = modalidadPago != null ?
                new ObjectParameter("modalidadPago", modalidadPago) :
                new ObjectParameter("modalidadPago", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertModalidadPago", modalidadPagoParameter, descripcionParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertNivel(string nivel, string descripcion, string usuarioInsert)
        {
            var nivelParameter = nivel != null ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNivel", nivelParameter, descripcionParameter, usuarioInsertParameter);
        }
    
        public virtual int InsertPlan(string plan, string descripcion, Nullable<int> idModalidadPago, string usuarioInsert)
        {
            var planParameter = plan != null ?
                new ObjectParameter("plan", plan) :
                new ObjectParameter("plan", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idModalidadPagoParameter = idModalidadPago.HasValue ?
                new ObjectParameter("idModalidadPago", idModalidadPago) :
                new ObjectParameter("idModalidadPago", typeof(int));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPlan", planParameter, descripcionParameter, idModalidadPagoParameter, usuarioInsertParameter);
        }
    
        public virtual int sp_altaEmpleado(Nullable<int> idEmpresa, Nullable<int> idEmpresaInfFiscal, Nullable<long> idEmpleadoPadre, string cusId, string numEmpleado, string nombre, string apellidoP, string apellidoM, Nullable<System.DateTime> fechaNacimiento, string rfc, string curp, string genero, string email, string calle, Nullable<int> numExterior, Nullable<int> numInterior, string colonia, string municipioDelegacion, string estado, Nullable<int> cp, string telefono, string telefono2, Nullable<bool> estatus, Nullable<int> idPlan, Nullable<int> idClub, Nullable<int> idTipoPago, string usuarioInsert)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var idEmpresaInfFiscalParameter = idEmpresaInfFiscal.HasValue ?
                new ObjectParameter("idEmpresaInfFiscal", idEmpresaInfFiscal) :
                new ObjectParameter("idEmpresaInfFiscal", typeof(int));
    
            var idEmpleadoPadreParameter = idEmpleadoPadre.HasValue ?
                new ObjectParameter("idEmpleadoPadre", idEmpleadoPadre) :
                new ObjectParameter("idEmpleadoPadre", typeof(long));
    
            var cusIdParameter = cusId != null ?
                new ObjectParameter("cusId", cusId) :
                new ObjectParameter("cusId", typeof(string));
    
            var numEmpleadoParameter = numEmpleado != null ?
                new ObjectParameter("numEmpleado", numEmpleado) :
                new ObjectParameter("numEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("apellidoP", apellidoP) :
                new ObjectParameter("apellidoP", typeof(string));
    
            var apellidoMParameter = apellidoM != null ?
                new ObjectParameter("apellidoM", apellidoM) :
                new ObjectParameter("apellidoM", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numExteriorParameter = numExterior.HasValue ?
                new ObjectParameter("numExterior", numExterior) :
                new ObjectParameter("numExterior", typeof(int));
    
            var numInteriorParameter = numInterior.HasValue ?
                new ObjectParameter("numInterior", numInterior) :
                new ObjectParameter("numInterior", typeof(int));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("colonia", colonia) :
                new ObjectParameter("colonia", typeof(string));
    
            var municipioDelegacionParameter = municipioDelegacion != null ?
                new ObjectParameter("municipioDelegacion", municipioDelegacion) :
                new ObjectParameter("municipioDelegacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var cpParameter = cp.HasValue ?
                new ObjectParameter("cp", cp) :
                new ObjectParameter("cp", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var idClubParameter = idClub.HasValue ?
                new ObjectParameter("idClub", idClub) :
                new ObjectParameter("idClub", typeof(int));
    
            var idTipoPagoParameter = idTipoPago.HasValue ?
                new ObjectParameter("idTipoPago", idTipoPago) :
                new ObjectParameter("idTipoPago", typeof(int));
    
            var usuarioInsertParameter = usuarioInsert != null ?
                new ObjectParameter("usuarioInsert", usuarioInsert) :
                new ObjectParameter("usuarioInsert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_altaEmpleado", idEmpresaParameter, idEmpresaInfFiscalParameter, idEmpleadoPadreParameter, cusIdParameter, numEmpleadoParameter, nombreParameter, apellidoPParameter, apellidoMParameter, fechaNacimientoParameter, rfcParameter, curpParameter, generoParameter, emailParameter, calleParameter, numExteriorParameter, numInteriorParameter, coloniaParameter, municipioDelegacionParameter, estadoParameter, cpParameter, telefonoParameter, telefono2Parameter, estatusParameter, idPlanParameter, idClubParameter, idTipoPagoParameter, usuarioInsertParameter);
        }
    
        public virtual ObjectResult<sp_buscarEmpleado_Result> sp_buscarEmpleado(Nullable<int> empresaId, Nullable<int> razonSocialId, Nullable<int> empleadoID, Nullable<int> empleadoPadreID, Nullable<bool> estatus)
        {
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var razonSocialIdParameter = razonSocialId.HasValue ?
                new ObjectParameter("RazonSocialId", razonSocialId) :
                new ObjectParameter("RazonSocialId", typeof(int));
    
            var empleadoIDParameter = empleadoID.HasValue ?
                new ObjectParameter("EmpleadoID", empleadoID) :
                new ObjectParameter("EmpleadoID", typeof(int));
    
            var empleadoPadreIDParameter = empleadoPadreID.HasValue ?
                new ObjectParameter("EmpleadoPadreID", empleadoPadreID) :
                new ObjectParameter("EmpleadoPadreID", typeof(int));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_buscarEmpleado_Result>("sp_buscarEmpleado", empresaIdParameter, razonSocialIdParameter, empleadoIDParameter, empleadoPadreIDParameter, estatusParameter);
        }
    
        public virtual int sp_cerrarSesion(Nullable<System.Guid> token)
        {
            var tokenParameter = token.HasValue ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cerrarSesion", tokenParameter);
        }
    
        public virtual int sp_consultaPadron(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_consultaPadron", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_crearSesion(string idUsuario, string ip)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_crearSesion", idUsuarioParameter, ipParameter);
        }
    
        public virtual int sp_editEmpleado(Nullable<int> idEmpresa, Nullable<int> idEmpresaInfFiscal, Nullable<long> idEmpleado, Nullable<long> idEmpleadoPadre, string cusId, string numEmpleado, string nombre, string apellidoP, string apellidoM, Nullable<System.DateTime> fechaNacimiento, string rfc, string curp, string genero, string email, string calle, Nullable<int> numExterior, Nullable<int> numInterior, string colonia, string municipioDelegacion, string estado, Nullable<int> cp, string telefono, string telefono2, Nullable<int> idPlan, Nullable<int> idClub, Nullable<int> idTipoPago, Nullable<bool> estatus, string usuarioUpdate)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var idEmpresaInfFiscalParameter = idEmpresaInfFiscal.HasValue ?
                new ObjectParameter("idEmpresaInfFiscal", idEmpresaInfFiscal) :
                new ObjectParameter("idEmpresaInfFiscal", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(long));
    
            var idEmpleadoPadreParameter = idEmpleadoPadre.HasValue ?
                new ObjectParameter("idEmpleadoPadre", idEmpleadoPadre) :
                new ObjectParameter("idEmpleadoPadre", typeof(long));
    
            var cusIdParameter = cusId != null ?
                new ObjectParameter("cusId", cusId) :
                new ObjectParameter("cusId", typeof(string));
    
            var numEmpleadoParameter = numEmpleado != null ?
                new ObjectParameter("numEmpleado", numEmpleado) :
                new ObjectParameter("numEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoPParameter = apellidoP != null ?
                new ObjectParameter("apellidoP", apellidoP) :
                new ObjectParameter("apellidoP", typeof(string));
    
            var apellidoMParameter = apellidoM != null ?
                new ObjectParameter("apellidoM", apellidoM) :
                new ObjectParameter("apellidoM", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("curp", curp) :
                new ObjectParameter("curp", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numExteriorParameter = numExterior.HasValue ?
                new ObjectParameter("numExterior", numExterior) :
                new ObjectParameter("numExterior", typeof(int));
    
            var numInteriorParameter = numInterior.HasValue ?
                new ObjectParameter("numInterior", numInterior) :
                new ObjectParameter("numInterior", typeof(int));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("colonia", colonia) :
                new ObjectParameter("colonia", typeof(string));
    
            var municipioDelegacionParameter = municipioDelegacion != null ?
                new ObjectParameter("municipioDelegacion", municipioDelegacion) :
                new ObjectParameter("municipioDelegacion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var cpParameter = cp.HasValue ?
                new ObjectParameter("cp", cp) :
                new ObjectParameter("cp", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var telefono2Parameter = telefono2 != null ?
                new ObjectParameter("telefono2", telefono2) :
                new ObjectParameter("telefono2", typeof(string));
    
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var idClubParameter = idClub.HasValue ?
                new ObjectParameter("idClub", idClub) :
                new ObjectParameter("idClub", typeof(int));
    
            var idTipoPagoParameter = idTipoPago.HasValue ?
                new ObjectParameter("idTipoPago", idTipoPago) :
                new ObjectParameter("idTipoPago", typeof(int));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editEmpleado", idEmpresaParameter, idEmpresaInfFiscalParameter, idEmpleadoParameter, idEmpleadoPadreParameter, cusIdParameter, numEmpleadoParameter, nombreParameter, apellidoPParameter, apellidoMParameter, fechaNacimientoParameter, rfcParameter, curpParameter, generoParameter, emailParameter, calleParameter, numExteriorParameter, numInteriorParameter, coloniaParameter, municipioDelegacionParameter, estadoParameter, cpParameter, telefonoParameter, telefono2Parameter, idPlanParameter, idClubParameter, idTipoPagoParameter, estatusParameter, usuarioUpdateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_login(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_login", usuarioParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<string> sp_sesionUnica(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_sesionUnica", idUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_validarSesionActiva(Nullable<System.Guid> token, string ip)
        {
            var tokenParameter = token.HasValue ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(System.Guid));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_validarSesionActiva", tokenParameter, ipParameter);
        }
    
        public virtual int UpdateClub(Nullable<int> idClub, string club, string descripcion, string usuarioUpdate)
        {
            var idClubParameter = idClub.HasValue ?
                new ObjectParameter("idClub", idClub) :
                new ObjectParameter("idClub", typeof(int));
    
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateClub", idClubParameter, clubParameter, descripcionParameter, usuarioUpdateParameter);
        }
    
        public virtual int UpdateEmpresa(Nullable<int> idEmpresa, string empresa, string nombreContacto, string apellidoPContacto, string apellidoMContacto, string puestoContacto, string telefonoContacto, string telefono2Contacto, string correoContacto, Nullable<bool> estatus, string usuarioUpdate)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var apellidoPContactoParameter = apellidoPContacto != null ?
                new ObjectParameter("apellidoPContacto", apellidoPContacto) :
                new ObjectParameter("apellidoPContacto", typeof(string));
    
            var apellidoMContactoParameter = apellidoMContacto != null ?
                new ObjectParameter("apellidoMContacto", apellidoMContacto) :
                new ObjectParameter("apellidoMContacto", typeof(string));
    
            var puestoContactoParameter = puestoContacto != null ?
                new ObjectParameter("puestoContacto", puestoContacto) :
                new ObjectParameter("puestoContacto", typeof(string));
    
            var telefonoContactoParameter = telefonoContacto != null ?
                new ObjectParameter("telefonoContacto", telefonoContacto) :
                new ObjectParameter("telefonoContacto", typeof(string));
    
            var telefono2ContactoParameter = telefono2Contacto != null ?
                new ObjectParameter("telefono2Contacto", telefono2Contacto) :
                new ObjectParameter("telefono2Contacto", typeof(string));
    
            var correoContactoParameter = correoContacto != null ?
                new ObjectParameter("correoContacto", correoContacto) :
                new ObjectParameter("correoContacto", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("estatus", estatus) :
                new ObjectParameter("estatus", typeof(bool));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpresa", idEmpresaParameter, empresaParameter, nombreContactoParameter, apellidoPContactoParameter, apellidoMContactoParameter, puestoContactoParameter, telefonoContactoParameter, telefono2ContactoParameter, correoContactoParameter, estatusParameter, usuarioUpdateParameter);
        }
    
        public virtual int UpdateFormato(Nullable<int> idFormato, string formato, string descripcion, Nullable<decimal> mensualidad, string usuarioUpdate)
        {
            var idFormatoParameter = idFormato.HasValue ?
                new ObjectParameter("idFormato", idFormato) :
                new ObjectParameter("idFormato", typeof(int));
    
            var formatoParameter = formato != null ?
                new ObjectParameter("formato", formato) :
                new ObjectParameter("formato", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var mensualidadParameter = mensualidad.HasValue ?
                new ObjectParameter("mensualidad", mensualidad) :
                new ObjectParameter("mensualidad", typeof(decimal));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFormato", idFormatoParameter, formatoParameter, descripcionParameter, mensualidadParameter, usuarioUpdateParameter);
        }
    
        public virtual int UpdateModalidadPago(Nullable<int> idModalidadPago, string modalidadPago, string descripcion, string usuarioUpdate)
        {
            var idModalidadPagoParameter = idModalidadPago.HasValue ?
                new ObjectParameter("idModalidadPago", idModalidadPago) :
                new ObjectParameter("idModalidadPago", typeof(int));
    
            var modalidadPagoParameter = modalidadPago != null ?
                new ObjectParameter("modalidadPago", modalidadPago) :
                new ObjectParameter("modalidadPago", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModalidadPago", idModalidadPagoParameter, modalidadPagoParameter, descripcionParameter, usuarioUpdateParameter);
        }
    
        public virtual int UpdateNivel(Nullable<int> idNivel, string nivel, string descripcion, string usuarioUpdate)
        {
            var idNivelParameter = idNivel.HasValue ?
                new ObjectParameter("idNivel", idNivel) :
                new ObjectParameter("idNivel", typeof(int));
    
            var nivelParameter = nivel != null ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateNivel", idNivelParameter, nivelParameter, descripcionParameter, usuarioUpdateParameter);
        }
    
        public virtual int UpdatePlan(Nullable<int> idPlan, string plan, string descripcion, Nullable<int> idModalidadPago, string usuarioUpdate)
        {
            var idPlanParameter = idPlan.HasValue ?
                new ObjectParameter("idPlan", idPlan) :
                new ObjectParameter("idPlan", typeof(int));
    
            var planParameter = plan != null ?
                new ObjectParameter("plan", plan) :
                new ObjectParameter("plan", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idModalidadPagoParameter = idModalidadPago.HasValue ?
                new ObjectParameter("idModalidadPago", idModalidadPago) :
                new ObjectParameter("idModalidadPago", typeof(int));
    
            var usuarioUpdateParameter = usuarioUpdate != null ?
                new ObjectParameter("usuarioUpdate", usuarioUpdate) :
                new ObjectParameter("usuarioUpdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePlan", idPlanParameter, planParameter, descripcionParameter, idModalidadPagoParameter, usuarioUpdateParameter);
        }
    }
}
